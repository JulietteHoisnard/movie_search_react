{"version":3,"sources":["components/SearchInput.js","components/Catch.js","containers/movieDb.js","components/card.js","App.js","reportWebVitals.js","index.js"],"names":["SearchInput","props","type","placeholder","width","Catch","state","hasError","this","children","error","Component","reducer","action","movies","res","data","results","Error","initialState","MovieSearch","query","useReducer","dispatch","useEffect","axios","get","params","api_key","then","catch","useMovieSearch","Card","styled","div","Body","Title","h3","Subtitle","p","App","useState","setQuery","style","display","justifyContent","color","margin","height","value","onChange","event","target","marginTop","flexWrap","map","movie","backgroundColor","backgroundImage","backdrop_path","title","vote_average","vote_count","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d327afb.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function SearchInput(props) {\n  return (\n    <input\n      type=\"search\"\n      placeholder=\"Type something...\"\n      width=\"100%\"\n      {...props}\n    />\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class Catch extends Component {\n  state = { hasError: false }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // Affichage du fallback de notre choix\n      return <h1>Something went wrong.</h1>\n    }\n\n    return this.props.children\n  }\n}\n","import { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"empty\":\n      return { error: null, movies: [] };\n    case \"success\":\n      return { error: null, movies: action.res.data.results };\n    case \"error\":\n      return { error: action.error, movies: null };\n    default:\n      throw new Error(`Invalid action type ${action.type}`);\n  }\n}\n\nconst initialState = { movies: null, error: null };\n\nexport function useMovieSearch(query) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    if (!query) {\n      dispatch({ type: \"empty\" });\n      return;\n    }\n    axios\n      .get(\"https://api.themoviedb.org/3/search/movie\", {\n        params: {\n          api_key: \"dbb2cac3572068ef8027a64c000f9389\",\n          query,\n        },\n      })\n      .then((res) => {\n        dispatch({ type: \"success\", res });\n      })\n      .catch((error) => {\n        dispatch({ type: \"error\", error });\n      });\n  }, [query]);\n\n  if (state.error) {\n    throw state.error;\n  }\n\n  return state.movies;\n}\n\nexport function MovieSearch({ query, children }) {\n  const movies = useMovieSearch(query);\n  return children(movies);\n}\n","import styled from \"styled-components\";\n\nconst Card = styled.div`\n  color: #fff;\n  text-shadow: 1px 1px 0 #000;\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n`;\n\nCard.Body = styled.div`\n  padding: 10px;\n`;\n\nCard.Title = styled.h3`\n  font-size: 1.2em;\n  line-height: 1.2em;\n  font-weight: 500;\n  margin: 0;\n  max-width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nCard.Subtitle = styled.p`\nfont-size: 0.9em;\nmargin: 0;import styled from 'styled-components'\n\n`;\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport SearchInput from \"./components/SearchInput\";\nimport Catch from \"./components/Catch\";\nimport { MovieSearch } from \"./containers/movieDb\";\nimport Card from \"./components/card\";\n\nfunction App() {\n  /* TODO: With the help of \"useState\", you should connect the \"SearchInput\" field */\n  const [query, setQuery] = useState(\"Up\");\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        color: \"white\",\n      }}\n    >\n      <div>\n        <h1\n          style={{\n            margin: \"25px\",\n          }}\n        >\n          Juliette's movies\n        </h1>\n        <div>\n          <SearchInput\n            style={{\n              margin: \"25px\",\n              height: \"40px\",\n              width: \"400px\",\n            }}\n            value={query}\n            onChange={(event) => setQuery(event.target.value)}\n          />\n        </div>\n      </div>\n      <Catch>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: \"20px\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          <MovieSearch query={query}>\n            {(movies) =>\n              movies &&\n              movies.map((movie) => (\n                <div\n                  style={{\n                    backgroundColor: \"lightblue\",\n                    width: \"30%\",\n                    margin: \"10px\",\n                  }}\n                >\n                  <Card\n                    style={{\n                      height: 200,\n                      backgroundImage: movie.backdrop_path\n                        ? `url(https://image.tmdb.org/t/p/original/${movie.backdrop_path})`\n                        : null,\n                    }}\n                  >\n                    <Card.Body>\n                      <Card.Title>{movie.title}</Card.Title>\n                      <Card.Subtitle>\n                        {movie.vote_average} ({movie.vote_count} votes)\n                      </Card.Subtitle>\n                    </Card.Body>\n                  </Card>\n                </div>\n              ))\n            }\n          </MovieSearch>\n        </div>\n      </Catch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Catch from './components/Catch';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <Catch>\n    <App />\n  </Catch>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}